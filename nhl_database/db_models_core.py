from sqlalchemy import MetaData, Table, Column
from sqlalchemy import Integer, String, Float, Boolean, DateTime, ForeignKey


# TODO: Change column names to lower case with underscores
# TODO: Need to fix goalie_boxscores TOI column and coaches title and abbr. cols
#  (they are currently filling with NULL)
meta = MetaData()

teams = Table(
    'teams', meta,
    Column('TeamID', Integer, primary_key=True),
    Column('abbreviation', String),
    Column('teamLocation', String),
    Column('teamName', String, nullable=False),
    Column('arenaCity', String),
    Column('arenaName', String),
    Column('arenaLatitude', Float),
    Column('arenaLlongitude', Float),
    Column('oldTeamID', Integer),
)

players = Table(
    'players', meta,
    Column('PlayerID', Integer, primary_key=True),
    Column('fullName', String, nullable=False),
    Column('birthDate', String),
    Column('nationality', String),
    Column('position', String),
    Column('position2', String),
    Column('rookieSeason', Integer),
    Column('shootsCatches', String),
    Column('height_cm', Float),
    Column('weight_kg', Float),
)

coaches = Table(
    'coaches', meta,
    Column('CoachID', Integer, primary_key=True),
    Column('fullName', String, nullable=False),
    Column('title', String),
    Column('abbreviation', String),
)

games = Table(
    'games', meta,
    Column('GameID', Integer, primary_key=True),
    Column('season', String),
    Column('type', String),
    Column('homeTeamId', ForeignKey('teams.TeamID'), nullable=False),
    Column('awayTeamId', ForeignKey('teams.TeamID'), nullable=False),
    Column('homeCoachID', ForeignKey('coaches.CoachID')),
    Column('awayCoachID', ForeignKey('coaches.CoachID')),
    Column('homeScore', Integer),
    Column('awayScore', Integer),
    Column('numberPeriods', Integer),
    Column('overtime', Boolean),
    Column('shootout', Boolean),
    Column('location', String),
    Column('arena', String),
    Column('datetime', DateTime),
    Column('timeZone', String),
    Column('timeZoneOffset', Integer),
    Column('activeHomePlayers', String),
    Column('activeAwayPlayers', String),
)

shifts = Table(
    'shifts', meta,
    Column('GameID', ForeignKey('games.GameID'), primary_key=True),
    Column('PlayerID', ForeignKey('players.PlayerID'), primary_key=True),
    Column('ShiftID', Integer, primary_key=True),
    Column('period', Integer),
    Column('startTime', String),
    Column('endTime', String),
    Column('duration', String),
)

game_events = Table(
    'game_events', meta,
    Column('GameID', ForeignKey('games.GameID'), primary_key=True),
    Column('EventID', Integer, primary_key=True),
    Column('eventTypeId', String, nullable=False),
    Column('secondaryType', String),
    Column('description', String),
    Column('player1ID', ForeignKey('players.PlayerID')),
    Column('player1Type', String),
    Column('player1Home', Boolean),
    Column('player2ID', ForeignKey('players.PlayerID')),
    Column('player2Type', String),
    Column('period', Integer),
    Column('periodType', String),
    Column('periodTime', String),
    Column('homeScore', Integer),
    Column('awayScore', Integer),
    Column('xCoord', Integer),
    Column('yCoord', Integer),
    Column('assist1ID', ForeignKey('players.PlayerID')),
    Column('assist2ID', ForeignKey('players.PlayerID')),
    Column('emptyNet', Boolean),
    Column('PIM', Integer),
    Column('playersHome', String),
    Column('playersAway', String),
)

shots = Table(
    'shots', meta,
    Column('GameID', ForeignKey('games.GameID'), primary_key=True),
    Column('ShotID', Integer, primary_key=True),
    Column('shooterID', ForeignKey('players.PlayerID'), nullable=False),
    Column('shotType', String),
    Column('shotResult', String),
    Column('period', Integer),
    Column('periodTime', String),
    Column('homeScore', Integer),
    Column('awayScore', Integer),
    Column('xCoord', Integer),
    Column('yCoord', Integer),
    Column('netDistance', Float),
    Column('netAngle', Float),
    Column('reboundShot', Boolean),
    Column('lastEventType', String),
    Column('timeSinceLast', String),
    Column('lastXCoord', Integer),
    Column('lastYCoord', Integer),
    Column('deltaY', Float),
    Column('angleChange', Float),
    Column('playEnds', Boolean),
    Column('puckFrozen', Boolean),
    Column('goal', Boolean),
    Column('missed', Boolean),
    Column('blocked', Boolean),
    Column('emptyNet', Boolean),
    Column('shooterHome', Boolean),
    Column('shooterHand', String),
    Column('offWingShot', Boolean),
    Column('playersHome', String),
    Column('playersAway', String),
)

team_boxscores = Table(
    'team_boxscores', meta,
    Column('GameID', ForeignKey('games.GameID'), primary_key=True),
    Column('TeamID', ForeignKey('teams.TeamID'), primary_key=True),
    Column('HomeTeam', Boolean, nullable=False),
    Column('goals', Integer),
    Column('shots', Integer),
    Column('hits', Integer),
    Column('blocks', Integer),
    Column('PIM', Integer),
    Column('PPG', Integer),
    Column('PPs', Integer),
    Column('faceoffPct', Float),
    Column('takeaways', Integer),
    Column('giveaways', Integer),
)

skater_boxscores = Table(
    'skater_boxscores', meta,
    Column('GameID', ForeignKey('games.GameID'), primary_key=True),
    Column('PlayerID', ForeignKey('players.PlayerID'), primary_key=True),
    Column('homeTeam', Boolean, nullable=False),
    Column('goals', Integer),
    Column('assists', Integer),
    Column('shots', Integer),
    Column('hits', Integer),
    Column('blocks', Integer),
    Column('PIM', Integer),
    Column('plusMinus', Integer),
    Column('faceOffWins', Integer),
    Column('faceoffTaken', Integer),
    Column('takeaways', Integer),
    Column('giveaways', Integer),
    Column('PPG', Integer),
    Column('PPA', Integer),
    Column('SHG', Integer),
    Column('SHA', Integer),
    Column('evenTOI', String),
    Column('PP_TOI', String),
    Column('SH_TOI', String),
    Column('TOI', String),
)

goalie_boxscores = Table(
    'goalie_boxscores', meta,
    Column('GameID', ForeignKey('games.GameID'), primary_key=True),
    Column('PlayerID', ForeignKey('players.PlayerID'), primary_key=True),
    Column('homeTeam', Boolean, nullable=False),
    Column('decision', String),
    Column('saves', Integer),
    Column('shots', Integer),
    Column('savesEven', Integer),
    Column('shotsEven', Integer),
    Column('savesPP', Integer),
    Column('shotsPP', Integer),
    Column('savesSH', Integer),
    Column('shotsSH', Integer),
    Column('goals', Integer),
    Column('assists', Integer),
    Column('PIM', Integer),
    Column('TOI ', String),
)
